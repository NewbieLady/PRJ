You are tasked with generating a list of all artists in the Chinook database, including those who haven't released any albums. The query should return artist names from the Artists table and their corresponding album titles from the Albums table. If an artist has no associated album, the album title should display as NULL. Which JOIN type should be used here? 1 2 3 SELECT Artists.Name, Albums.Title FROM Artists ______ JOIN Albums ON Artists.ArtistId = Albums.ArtistId;|LEFT JOIN
You are asked to display track names and their corresponding album titles, returning only those tracks with matching albums based on the AlbumId. What type of join should you use? 1 2 3 SELECT Tracks.Name, Albums.Title FROM Tracks _________ JOIN Albums ON Tracks.AlbumId = Albums.AlbumId;|INNER JOIN
You are required to combine the results of two SELECT queries, one for major genres and one for minor genres. True or False: UNION will combine the results of these two SELECT queries and keep duplicates.|False
You are required to categorize customers into High, Medium, and Low spenders based on their total purchase amounts. Below is the SQL query to calculate total spending. 1 2 3 4 5 6 7 8 9 SELECT CustomerId, SUM(TotalAmount) AS TotalSpent, ________ WHEN SUM(TotalAmount) > 1000 THEN 'High' WHEN SUM(TotalAmount) BETWEEN 500 AND 1000 THEN 'Medium' ELSE 'Low' END AS SpendingCategory FROM Sales GROUP BY CustomerId; Which SQL operation categorizes customers based on their spending?|CASE
You want to create a list that includes all artists and their corresponding albums, even if some artists have no albums or some albums have no associated artists. Since MySQL does not directly support FULL OUTER JOIN, you need to emulate it. Select all that apply to emulate the FULL OUTER JOIN. 1 2 3 4 5 6 7 8 9 SELECT Artists.Name, Albums.Title FROM Artists _________ JOIN Albums ON Artists.ArtistId = Albums.ArtistId _________ SELECT Artists.Name, Albums.Title FROM Artists __________ JOIN Albums ON Artists.ArtistId = Albums.ArtistId;|RIGHT JOIN$LEFT JOIN$UNION
You are required to use a LEFT JOIN to retrieve all artists, including those who haven't released any albums. Which of the following is true about LEFT JOIN? Select all that apply.|It returns all rows from the left table.$It can return NULL values from the right table.
You are required to retrieve a list of tracks and their matching albums. Does an INNER JOIN return the required list?|True
You are tasked with generating a combined list of genres from the Chinook database, separating them into two categories: Major genres (with more than 50 tracks) and Minor genres (with 50 tracks or fewer). Which SQL operation should be used to combine the results of the below queries into a single list? 1 2 3 4 5 6 7 SELECT GenreName FROM Genres WHERE TrackCount > 50 __________ SELECT GenreName FROM Genres WHERE TrackCount <= 50;|UNION
You are tasked with analyzing customer spending behavior to help tailor marketing strategies. The goal is to categorize customers into High, Medium, and Low spenders based on their total purchases. This categorization will allow for more targeted marketing efforts. What SQL feature should you use to implement the necessary conditional logic within your query?|CASE
You are tasked with generating a report that lists all tracks and their corresponding album titles. Some tracks may not belong to any album, and those should display NULL in the album title field. Which SQL JOIN would you use to accomplish this?|LEFT JOIN
You're responsible for generating reports that categorize customers into spending tiers based on their total purchases recorded in the Invoices table. To do this effectively, you use the SQL CASE statement, which allows you to apply conditional logic within your queries. Which of the following queries correctly uses the CASE statement to categorize customers based on their spending? Select all that apply.|1 2 3 4 5 6 7 SELECT CustomerId, CASE WHEN Total < 50 THEN 'Low' END AS SpendingCategory FROM Invoices;$9$1 2 3 4 5 6 7 8 9 10 SELECT CustomerId, CASE Total > 100 THEN 'High' ELSE 'Low' END AS SpendingCategory FROM Invoices;
In Task 4, you are required to emulate a FULL OUTER JOIN between the Artists and Albums tables. In MySQL, you can use a combination of LEFT JOIN and RIGHT JOIN with a UNION to retrieve all artists and their albums, including those without matches in either table.|True
You are asked to generate a report from the Chinook database with two tables: Artists (left) and Albums (right). If you use a LEFT JOIN to list all artists, will the query include artists without any albums?|True
